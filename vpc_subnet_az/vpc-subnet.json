{
  "Description": "Creates a three-subnet VPC (2 public w/ IGW and 1 w/ NAT Gateway",
  "Parameters": {
    "VPCCIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.10.0.0/16",
      "Description": "CIDR block for entire VPC.",
      "Type": "String"
    },
    "PublicSubnetCIDR1": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.10.10.0/24",
      "Description": "CIDR block for the public subnet 1",
      "Type": "String"
    },
    "PublicSubnetCIDR2": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.10.20.0/24",
      "Description": "CIDR block for the public subnet",
      "Type": "String"
    },
    "PrivateSubnetCIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.10.30.0/24",
      "Description": "CIDR block for the private subnet",
      "Type": "String"
    },
    "SSHLocation": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(/([0-9]|[1-2][0-9]|3[0-2]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/0-28",
      "Default": "0.0.0.0/0",
      "Description": "Network allowed to ssh to instances in public subnet.",
      "Type": "String"
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "VPCCIDR"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "ss",
                [
                  "VPC ",
                  {
                    "Ref": "VPCCIDR"
                  }
                ]
              ]
            }
          },
          {
            "Key": "CloudFormationStack",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ],
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true"
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "IGW"
          },
          {
            "Key": "CloudFormationStack",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Ref": "PublicSubnetCIDR1"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "ss",
                [
                  "Public ",
                  {
                    "Ref": "PublicSubnetCIDR1"
                  }
                ]
              ]
            }
          },
          {
            "Key": "CloudFormationStack",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ],
        "AvailabilityZone": "us-east-1a"
      }
    },
    "PublicSubnet2": {
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Ref": "PublicSubnetCIDR2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "ss",
                [
                  "Public ",
                  {
                    "Ref": "PublicSubnetCIDR2"
                  }
                ]
              ]
            }
          },
          {
            "Key": "CloudFormationStack",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ],
        "AvailabilityZone": "us-east-1b"
      },
      "Type": "AWS::EC2::Subnet"
    },
    "PrivateSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": {
          "Ref": "PrivateSubnetCIDR"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "Private ",
                  {
                    "Ref": "PrivateSubnetCIDR"
                  }
                ]
              ]
            }
          },
          {
            "Key": "CloudFormationStack",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "EIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "NAT": {
      "DependsOn": "AttachGateway",
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "EIP",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "PublicSubnet1"
        }
      }
    },
    "PublicSubnetRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "ss",
                [
                  "Public ",
                  {
                    "Ref": "PublicSubnetCIDR1"
                  }
                ]
              ]
            }
          },
          {
            "Key": "CloudFormationStack",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "AttachGateway",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicSubnetRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnetRouteTableAssociation1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "RouteTableId": {
          "Ref": "PublicSubnetRouteTable"
        }
      }
    },
    "PublicSubnetRouteTableAssociation2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet2"
        },
        "RouteTableId": {
          "Ref": "PublicSubnetRouteTable"
        }
      }
    },
    "PublicInstanceSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "Enable SSH access via port 22",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "SSHLocation"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "PublicSG ",
                  {
                    "Ref": "VPCCIDR"
                  }
                ]
              ]
            }
          },
          {
            "Key": "CloudFormationStack",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      }
    },
    "PrivateSubnetRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "Private ",
                  {
                    "Ref": "PrivateSubnetCIDR"
                  }
                ]
              ]
            }
          },
          {
            "Key": "CloudFormationStack",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      }
    },
    "PrivateSubnetRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateSubnetRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "NAT"
        }
      }
    },
    "PrivateSubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnet"
        },
        "RouteTableId": {
          "Ref": "PrivateSubnetRouteTable"
        }
      }
    },
    "PrivateSubnetInstanceSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "Enable all TCP ports from instances in this VPC",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "1",
            "ToPort": "65535",
            "CidrIp": {
              "Ref": "VPCCIDR"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "PrivateSG ",
                  {
                    "Ref": "VPCCIDR"
                  }
                ]
              ]
            }
          },
          {
            "Key": "CloudFormationStack",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "VPCId": {
      "Description": "VPCId of the newly created VPC",
      "Value": {
        "Ref": "VPC"
      }
    },
    "NatGateway": {
      "Description": "NAT gateway instance",
      "Value": {
        "Ref": "NAT"
      }
    },
    "EIPAddress": {
      "Description": "EIP allocated to NAT gateway",
      "Value": {
        "Ref": "EIP"
      }
    },
    "PublicSubnet": {
      "Description": "SubnetId of the public subnet",
      "Value": {
        "Ref": "PublicSubnet1"
      }
    },
    "PublicSubnetRouteTable": {
      "Description": "Public route table",
      "Value": {
        "Ref": "PublicSubnetRouteTable"
      }
    },
    "PublicInstanceSG": {
      "Description": "SG for instances in public subnet",
      "Value": {
        "Ref": "PublicInstanceSG"
      }
    },
    "PrivateSubnet": {
      "Description": "SubnetId of the public subnet",
      "Value": {
        "Ref": "PrivateSubnet"
      }
    },
    "PrivateSubnetRouteTable": {
      "Description": "Private subnet route table",
      "Value": {
        "Ref": "PrivateSubnetRouteTable"
      }
    },
    "PrivateSubnetInstanceSG": {
      "Description": "SG for instances in the private subnet",
      "Value": {
        "Ref": "PrivateSubnetInstanceSG"
      }
    }
  },
  "AWSTemplateFormatVersion": "2010-09-09",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "VPC configuration parameters"
          },
          "Parameters": [
            "VPCCIDR",
            "PublicSubnetCIDR1",
            "PublicSubnetCIDR2",
            "PrivateSubnetCIDR",
            "SSHLocation"
          ]
        }
      ],
      "ParameterLabels": {
        "VPCCIDR": {
          "default": "Enter CIDR of new VPC"
        },
        "PublicSubnetCIDR1": {
          "default": "Enter CIDR of the public subnet1"
        },
        "PublicSubnetCIDR2": {
          "default": "Enter CIDR of the public subnet2"
        },
        "PrivateSubnetCIDR": {
          "default": "Enter CIDR of the private subnet"
        },
        "SSHLocation": {
          "default": "Subnet allowed to ssh on TCP to public subnet"
        }
      }
    }
  },
  "Mappings": {}
}